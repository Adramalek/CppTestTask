; Метаданные микро-ядра
; Версия: 1.0.0
; Поколение: 1
<root>: Kernel\Targets
1 : Kernel.System
  S01: Работа со строками
    Описание : @nonutx
      Модуль предназначен для обеспечения функционала работы со строками\\
      При получении сообщения Kernel.Stop модуль завершает работу\\
    Подцели
      1 : Заменить одну строку другой
      2 : Разбить строку по разделителю
      3 : Разбить строку по первому разделителю с начала строки
      4 : Разбить строку по первому разделителю с конца строки
      5 : Удалить лидирующие пробелы в строке
      6 : Проверить соответствие строки формату
      7 : Получить длину строки
  Заменить одну строку другой
    Описание : @nonutx
      Для замены одной строки другой модулю следует отправить модулю сообщение Kernel.System.ReplaceAll\\
      В ответ модуль отправляет сообщение Kernel.System.ReplaceAllAnswer\\
    Проверки:
      01 : Пустая строка в Source
      02 : Пустая строка в Pattern
      03 : Пустая строка в Value
      04 : Наличие спецсимволов в Source/Pattern/Value
      05 : Обычная замена подстроки
  Разбить строку по разделителю
    Описание : @nonutx
      Для разбиения строки по разделителю модулю следует отправить модулю сообщение Kernel.System.Split\\
        - Mode=AnyOf означает, что строка может быть разбита по любому из переданных разделителей
        - Mode=Sequence требует точного совпадения разделителя с подстрокой
        - Флаг AllowEmpty, установленный в true, разрешает возврат пустых строк в ответном сообщении
      Если вместо разделителя передана пустая строка, ответом будет исходная строка\\
      Если строку невозможно разбить по заданному разделителю, ответом будет исходная строка\\
      В ответ модуль отправляет сообщение Kernel.System.SplitAnswer с результатами выполненного действия в виде массива строк\\
    Проверки:
      01: Пустая строка в Source
      02: Символ-разделитель может быть служебным символом
      03: Символ-разделитель пуст
      04: AllowEmpty установлено в true
      05: AllowEmpty установлено в false
      06 : Успешно разбить строку по символу
      07 : Успешно разбить строку по подстроке
  Разбить строку по первому разделителю с начала строки
    Описание : @nonutx
      Для разбиения строки по первому вхождению заданного разделителя на "голову" и "хвост" следует отправить
      модулю сообщение Kernel.System.UnpackFirst\\
        - Mode=AnyOf означает, что строка может быть разбита по любому из переданных разделителей
        - Mode=Sequence требует точного совпадения разделителя с подстрокой
      Строка или разделитель не могут быть пустыми. В таком случае модуль отправляет ответ Kernel.System.UnpackFirstAnswer
      со статусом UnpackAnswerStatus.Error\\
      Если строка совпала с разделителем, модуль отправляет ответ Kernel.System.UnpackFirstAnswer со статусом
      UnpackAnswerStatus.IsDivider\\
      Если после разбиения "голова" оказалась пустой, модуль отправляет ответ Kernel.System.UnpackFirstAnswer
      со статусом UnpackAnswerStatus.NoHead\\
      Если после разбиения "хвост" оказался пустым, модуль отправляет ответ Kernel.System.UnpackFirstAnswer
      со статусом UnpackAnswerStatus.NoTail\\
      В противном случае отправляется ответ Kernel.System.UnpackFirstAnswer со статусом UnpackAnswerStatus.Success,
      "головой" и "хвостом" строки\\
    Проверки:
      01 : Пустая строка в Source
      02 : Пустая строка в Delim
      03 : Строка Source совпала с Delim
      04 : Строка Source не содержит Delim
      05 : Строка Source начинается с Delim
      06 : Строка Source оканчивается Delim
      07 : успешное разделение строки
  Разбить строку по первому разделителю с конца строки
    Описание : @nonutx
      Для разбиения строки по последнему вхождению заданного разделителя на "голову" и "хвост" следует отправить
      модулю сообщение Kernel.System.UnpackLast\\
        - Mode=AnyOf означает, что строка может быть разбита по любому из переданных разделителей
        - Mode=Sequence требует точного совпадения разделителя с подстрокой
      Строка или разделитель не могут быть пустыми. В таком случае модуль отправляет ответ Kernel.System.UnpackLastAnswer
      со статусом UnpackAnswerStatus.Error\\
      Если строка совпала с разделителем, модуль отправляет ответ Kernel.System.UnpackLastAnswer со статусом
      UnpackAnswerStatus.IsDivider\\
      Если после разбиения "голова" оказалась пустой, модуль отправляет ответ Kernel.System.UnpackLastAnswer
      со статусом UnpackAnswerStatus.NoHead\\
      Если после разбиения "хвост" оказался пустым, модуль отправляет ответ Kernel.System.UnpackLastAnswer
      со статусом UnpackAnswerStatus.NoTail\\
      В противном случае отправляется ответ Kernel.System.UnpackLastAnswer со статусом UnpackAnswerStatus.Success,
      "головой" и "хвостом" строки\\
    Проверки:
      01 : Пустая строка в Source
      02 : Пустая строка в Delim
      03 : Строка Source совпала с Delim
      04 : Строка Source не содержит Delim
      05 : Строка Source начинается с Delim
      06 : Строка Source оканчивается Delim
      07 : успешное разделение строки
  Удалить лидирующие пробелы в строке
    Описание : @nonutx
      Модуль поддерживает функционал удаления лидирующих пробелов в строке
    Подцели:
      Удалить пробелы в начале строки
      Удалить пробелы в конце строки
      Удалить пробелы в начале и в конце строки
  Удалить пробелы в начале строки
    Описание : @nonutx
      Для удаления пробелов в начале строки следует отправить модулю сообщение Kernel.System.TrimLeft\\
      В ответ модуль отправляет сообщение Kernel.System.TrimLeftAnswer\\
    Проверки:
      01 : Строка Source пуста
      02 : Строка Source непуста
      03 : Строка Source состоит из white-space символов
  Удалить пробелы в конце строки
    Описание : @nonutx
      Для удаления пробелов в конце строки следует отправить модулю сообщение Kernel.System.TrimRight\\
      В ответ модуль отправляет сообщение Kernel.System.TrimRightAnswer\\
    Проверки:
      01 : Строка Source пуста
      02 : Строка Source непуста
      03 : Строка Source состоит из white-space символов
  Удалить пробелы в начале и в конце строки
    Описание : @nonutx
      Для удаления пробелов в начале и в конце строки следует отправить модулю сообщение Kernel.System.Trim\\
      В ответ модуль отправляет сообщение Kernel.System.TrimAnswer\\
    Проверки:
      01 : Строка Source пуста
      02 : Строка Source непуста
      03 : Строка Source состоит из white-space символов
  Проверить соответствие строки формату
    Описание : @nonutx
      Для сопоставления строки с форматом следует отправить модулю сообщение Kernel.System.MatchFormat\\
      Формат сопоставления может содержать маски для поиска точных совпадений или для варьирующихся строк\\
      (\<число><символ формата>, где символ формата - d-цифра, w-буква латинского или кириллического алфавита)\\
      Подробное описание механизма сопоставление расположено по ссылке [[ulr:productlist:uniteller:framework:kernel:system:t0516:docs]] \\
      Исходная строка или маска формата не могут быть пустыми. В таком случае модуль отправляет ответ
      Kernel.System.MatchFormatAnswer с флагом Matching.Fail\\
      Если задана неверная маска формата, модуль отправляет ответ Kernel.System.MatchFormatAnswer с флагом
      Matching.WrongFormat\\
      Вариативные части строки, прошедшие сопоставление формату, модуль возвращает в ответе Kernel.System.MatchFormatAnswer
      с флагом Matching.Success в виде массива строк\\
    Проверки:
      01 : Строка Source пуста
      02 : Строка Format пуста
      03 : Строка Source непуста, строка Format непуста
      04 : Спец. символы в строке Source
      05 : Спец. символы в строке Format
      06 : Некорректный формат
  Получить длину строки
    Описание : @nonutx
      Для получения длины строки следует отправить модулю сообщение Kernel.System.GetLength\\
      В ответ модуль отправляет сообщение Kernel.System.GetLengthAnswer\\
    Проверки:
      01 : Строка Source пуста
      02 : Строка Source не пуста
